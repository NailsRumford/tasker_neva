# Generated by Django 4.1.7 on 2023-04-01 17:16

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('branch', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Technician',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True, help_text='Укажите, активена ли учетная запись техник', verbose_name='активен')),
                ('branch', models.ForeignKey(help_text='Выберите филиал, к которому относится техник', on_delete=django.db.models.deletion.CASCADE, to='branch.branch', verbose_name='филиал')),
                ('user', models.OneToOneField(help_text='Пользователь, к которому относится техник', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='пользователь')),
            ],
            options={
                'verbose_name': 'техник',
                'verbose_name_plural': 'техники',
            },
        ),
        migrations.CreateModel(
            name='Engineer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True, help_text='Укажите, активена ли учетная запись инженер', verbose_name='активен')),
                ('branch', models.ForeignKey(help_text='Выберите филиал, к которому относится инженер', on_delete=django.db.models.deletion.CASCADE, to='branch.branch', verbose_name='филиал')),
                ('user', models.OneToOneField(help_text='Пользователь, к которому относится инженер', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='пользователь')),
            ],
            options={
                'verbose_name': 'инженер',
                'verbose_name_plural': 'инженеры',
            },
        ),
    ]
